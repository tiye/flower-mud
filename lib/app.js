// Generated by CoffeeScript 1.6.3
var app, app_chooser, file_list, fs, http, match, mime, open_app, path, redirect_chooser;

path = require('path');

http = require('http');

mime = require('mime');

fs = require('fs');

match = require('coffee-pattern').match;

app = http.createServer(function(req, res) {
  var reply;
  res.writeHead(200, {
    'Content-Type': mime.lookup(req.url)
  });
  reply = function(error, data) {
    if (error != null) {
      res.writeHead(500);
      return res.end("server has error: " + error);
    } else if (data != null) {
      if (data.code != null) {
        res.writeHead(data.code, {
          'Location': data.url
        });
        return res.end('');
      } else {
        res.writeHead(200, {
          'Content-Type': mime.lookup(req.url)
        });
        return res.end(data.content);
      }
    } else {
      res.writeHead(404);
      return res.end('nothing found');
    }
  };
  return match(req.url, '/', redirect_chooser(reply), '/choose/list.json', file_list(reply), /^\/choose/, app_chooser(reply), null, open_app(reply));
});

redirect_chooser = function(reply) {
  return function(the_url) {
    return reply(null, {
      url: '/choose/index.html',
      code: 302
    });
  };
};

file_list = function(reply) {
  return function(the_url) {
    return fs.readdir('./', function(err, list) {
      if (err != null) {
        return reply(err);
      } else {
        return reply(null, {
          content: JSON.stringify(list)
        });
      }
    });
  };
};

app_chooser = function(reply) {
  return function(the_url) {
    the_url = the_url.replace(/^\/choose/, '');
    return fs.readFile(path.join(__dirname, '../', the_url), function(err, content) {
      if (err != null) {
        return reply(err);
      } else {
        return reply(null, {
          content: content
        });
      }
    });
  };
};

open_app = function(reply) {
  return function(the_url) {
    return fs.readFile(path.join(process.env.PWD, the_url), function(err, content) {
      if (err != null) {
        return reply(err);
      } else {
        return reply(null, {
          content: content
        });
      }
    });
  };
};

app.listen(3100);

/*
//@ sourceMappingURL=app.map
*/
